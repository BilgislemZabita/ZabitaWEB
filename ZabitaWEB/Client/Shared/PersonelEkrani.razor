@page "/panel/personelekrani"
@using ZabitaWEB.Client.Services.Abstract
@using Zabita.Entities.Concrete

@inject ITalepsService talepService
@inject IIsTiplerisService istipleriService
@inject IAmirliksService amirlikService







<div class="row mt-4">
    <div class="col-12 mb-4">
        <RadzenDataGrid AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="4"
                        AllowSorting="true" Data="@talepler" TItem="Talep" ColumnWidth="200px"
                        SelectionMode="DataGridSelectionMode.Single" @bind-Value=@SeciliTalep>
            <Columns>
                <RadzenDataGridColumn TItem="Talep" Property="TalepId" Title="Talep ID" />

                <RadzenDataGridColumn TItem="Talep" Property="TalepKonu" Title="Talep Konu" />
                <RadzenDataGridColumn TItem="Talep" Property="YerleskeAciklamasi" Title="Yerleşke Açıklaması" FormatString="{0:d}" />
                <RadzenDataGridColumn TItem="Talep" Property="TalepAciklama" Title="Talep Açıklama" />
            </Columns>
        </RadzenDataGrid>

    </div>
</div>
<div class="row">
    <div class="col-12"></div>
</div>
<div class="row">
    <div class="col-12">
        <RadzenCard Style="width:100%; margin-bottom: 20px;height:fit-content;">
            <div class="card-header" style="max-height:2.5em;background-color:white"><h5 style="text-align:start">Personel Bilgisi</h5></div>

            <div class="row">
                <div class="col-6">
                    @foreach (var s in SeciliTalep)
                    {
                        <div style="">Amirlik Adı:</div>

                        <b>@s.TalepAmirlik.AmirlikIsım</b>
                        <div style="margin-top:20px">Yerleşke Açıklaması:</div>
                        <b>Yerleşke_Aciklamasi</b>
                        <div style="margin-top:20px">İstenilen Tarih:</div>
                        <b>02.05.2021</b>
                    }


                </div>
                <div class="col-6">
                    <div style="">Talep Eden Personel:</div>
                    <b>Talep_Eden_Personel</b>
                    <div style="margin-top:20px">İletişim Bilgileri:</div>
                    <b>05455454545 ---</b>
                    <b>personel@ibb.gov.tr</b>
                    <div style="margin-top:20px">Atanılan Tarih:</div>
                    <b>18.05.2021</b>
                </div>

            </div>
        </RadzenCard>
    </div>

</div>



@code{
    //IEnumerable<Talep> talepler { get; set; }
    IEnumerable<IsTipleri> gecmis { get; set; }
    IEnumerable<Amirlik> amirlikler { get; set; }
    IList<Talep> SeciliTalep = new List<Talep>();

    List<Talep> TalepList = new List<Talep>();
    List<Amirlik> AmirlikList = new List<Amirlik>();

    private string searchString = "";
    private Talep selectedItem = null;
    private HashSet<Talep> selectedItems = new HashSet<Talep>();

    private IEnumerable<Talep> talepler = new List<Talep>();

    bool busy;
    bool yapilamadi = false;

    protected async override void OnParametersSet()
    {
        talepler = await Task.Run(() => talepService.GetTaleps());
        amirlikler = await Task.Run(() => amirlikService.GetAmirliks());
        gecmis = await Task.Run(() => istipleriService.GetIsTipleris());
        TalepList.AddRange(talepler);
        AmirlikList.AddRange(amirlikler);
        SeciliTalep = talepler.Take(1).ToList();

    }
    async Task OnBusyClick()
    {
        busy = true;
        await Task.Delay(2000);
        busy = false;
    }
    async Task Yapilamadi()
    {
        await Task.Delay(2000);
        yapilamadi = true;
    }
    async Task Gonder()
    {
        await Task.Delay(2000);
        yapilamadi = false;
    }
    private bool FilterFunc(Talep element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.TalepAciklama.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;

        return false;
    }
}
