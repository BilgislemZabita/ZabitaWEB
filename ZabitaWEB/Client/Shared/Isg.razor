@page "/talep/isg"
@using Zabita.Entities.Concrete
@using ZabitaWEB.Client.Services.Abstract
@inject IIsAltTiplerisService isalttipleriService


<RadzenCard>
    <div class="card-header " style="max-height:2.3em;background-color:white;font-size:larger;text-align:justify"><h3> İSG Detayları</h3> </div>

    <div class="row">
        <div class="col-md-6 mt-1">



            <MudSelect T="IsAltTipleri" Label="Talep Etmek İstediğniz İşi Seçiniz..." HelperText="Çoklu Seçim Yapılabilir." MultiSelection="true" @bind-Value="@secilenalttip"
                       @bind-SelectedValues="options" ToStringFunc="@converter" Immediate="true">
                @foreach (var state in IsAltTipleriList)
                {
                    if (state.IsTipiEslesmeId == this.IsTipiId)
                    {
                        <MudSelectItem T="IsAltTipleri" Value="@state">@state.IsAltTipi</MudSelectItem>

                    }
                }
            </MudSelect>


        </div>





    </div>



</RadzenCard>


@code {

    [Parameter]
    public string IsTipiId { get; set; }

    private IsAltTipleri secilenalttip { get; set; } = new IsAltTipleri();
    Func<IsAltTipleri, string> converter = p => p?.IsAltTipi;
    private HashSet<IsAltTipleri> options { get; set; } = new HashSet<IsAltTipleri>() { };

    IEnumerable<IsAltTipleri> IsAltTipleri;
    List<IsAltTipleri> IsAltTipleriList = new List<IsAltTipleri>();


    protected async override void OnParametersSet()
    {
        //Taleptipleri = await istipleriService.GetIsTipleris();
        IsAltTipleri = await isalttipleriService.GetIsAltTipleris();

        //Amirlikler = await amirliksService.GetAmirliks();
        //listtalep = await talepsService.GetTaleps();
        //IsTipleriList.AddRange(lististipleri);
        //AmirlikList.AddRange(listyerleske);
        // TalepList.AddRange(listtalep);
        IsAltTipleriList.AddRange(IsAltTipleri);
        //TalepTipleriList.AddRange(Taleptipleri);
        //AmirlikList.AddRange(Amirlikler);

    }
}
