@page "/talep/isg"
@using Zabita.Entities.Concrete
@using ZabitaWEB.Client.Services.Abstract


<RadzenCard>
    <div class="card-header " style="max-height:2.3em;background-color:white;font-size:larger;text-align:justify"><h3> İSG Detayları</h3> </div>

    <div class="row">
        <div class="col-md-6 mt-1">

            <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            @bind-Value=@multipleValues Multiple="true" Placeholder="Talep Edilecek İş..." Data=@Products TextProperty="IsTipi" ValueProperty="IsId"
                            Change=@(args => OnChange(args, "DropDown with multiple selection")) Style="width:100%" />


        </div>
        <div class="col-md-6 mt-1">

            <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                            @bind-Value=@multipleValues Multiple="true" Placeholder="İşin Yapılacağı Yerleşke" Data=@Products TextProperty="CompanyName" ValueProperty="CustomerID"
                            Change=@(args => OnChange(args, "DropDown with multiple selection")) Style="width:100%" />

        </div>




    </div>
  


</RadzenCard>


@code {

    IEnumerable<int> multipleValues = new int[] { };

    public IEnumerable<Taleptipleri> Products { get; set; }

    List<Taleptipleri> Options = new List<Taleptipleri>();


    void OnChange(object value, string name)
    {
        var str = value is IEnumerable<object> ? string.Join(", ", (IEnumerable<object>)value) : value;

        Console.WriteLine($"{name} value changed to {str}");
    }

}
