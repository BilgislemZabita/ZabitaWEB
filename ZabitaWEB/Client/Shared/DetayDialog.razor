@using System.Net
@using System.Text
@using Zabita.Entities.Concrete
@using ZabitaWEB.Client.Services.Abstract
@inject IFotoesService fotosService
<MudDialog DisableSidePadding="true">
    <DialogContent>
        <MudContainer Style="max-height: 100%; overflow-y: scroll; overflow-x: scroll; max-width: 100%">
            @if (Loading)
            {
                <MudProgressCircular Indeterminate="true"></MudProgressCircular>
            }
            else
            {

                <MudText Style="white-space: pre-wrap;">@tlp.TalepAciklama</MudText>


                <MudCarousel ItemsSource="@TalepFoto" Style="height: 25em" ShowArrows="true" ShowDelimiters="true" AutoCycle="false">
                    <ItemTemplate>
                        <div class="d-flex flex-column flex-column justify-center" style="height:100%">
                            <img src="data:image/bmp;base64, @(Convert.ToBase64String(context.FotoData))" class="img-fluid" alt="...">
                        </div>
                    </ItemTemplate>
                </MudCarousel>


            }
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Ok">Kapat</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    [Parameter] public Talep talep { get; set; }
    public IEnumerable<Foto> TalepFoto { get; set; }
    [Inject] HttpClient HttpClient { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        Loading = true;
        TalepFoto = await fotosService.GetTalepFoto(talep.TalepId);
        tlp = talep;

        Loading = false;
    }

    private Talep tlp;
    private bool Loading = false;

    private void Ok()
    {
        MudDialog.Close(DialogResult.Ok(true));
    }
}