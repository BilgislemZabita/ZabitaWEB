@page "/talep"
@using Zabita.Entities.Concrete
@using ZabitaWEB.Client.Services.Abstract
@inject IAmirliksService amirliksService
@inject ITalepsService talepsService
@inject IIsTiplerisService istipleriService
@inject NavigationManager UriHelper

<div class="row">
    <div class="col-md-12">
        <RadzenCard>
            <div class="card-header " style="max-height:2.3em;background-color:white;font-size:larger;text-align:justify"><h3> İş Seçimi</h3> </div>

            <div class="row">
                <div class="col-md-6 mt-3">

                    <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive"
                                    TValue="int" @bind-Value=@amirlikid Placeholder="Amirlik Seçiniz..."
                                    Data=@AmirlikList SelectedItem="@selectedamirliks" TextProperty="AmirlikIsım" ValueProperty="AmirlikID" Style="width:100%" />
                    <MudText>Seçilen Amirlik :@selectedamirliks</MudText>

                </div>
                <div class="col-md-6 mt-3">
                   
                    <RadzenDropDown TValue="int" @bind-Value=@istipiid Placeholder="İş Seçiniz..." Data="@(IsTipleriList.Where(o => o.AmirlikId == amirlikid.ToString()))" 
                                    Change=@(args => OnChange(args, "DropDown with multiple selection")) TextProperty="IsTipi" ValueProperty="IstipiID"
                                    Style="margin-bottom: 20px; width: 100%" />

                </div>

            </div>

        </RadzenCard>
    </div>
</div>
<div class="row">
    <div class="col-md-12 mt-3 ">
        @if (AmirlikList == null)
        {

            <div class="spinner">Yükleniyor...</div>
        }
        else

        {
            @foreach (var widget in _components)
            {
                switch (widget.Key)
                {
                    case 1:
                        @*<DaireBakimOnarim Products=Options />*@
                        break;
                    case 2:
                        @*<Isg Products=Options />*@
                        break;

                }
            }
            @foreach (var widget in _components)
            {
                if (widget.Key == 1 && istipiid==1 )
                {
                    string zz = istipiid.ToString();
                    <DaireBakimOnarim IsTipiId=@zz />

                }
                else if (widget.Key == 2 && istipiid == 2)
                {
                    string zz = istipiid.ToString();

                    <Isg IsTipiId="@zz"/>
                }

            }
        }
    </div>


</div>
<div>
</div>


@code {

    Dictionary<int, IComponent> _components = new Dictionary<int,IComponent>();
    int amirlikid=0 ;
    IEnumerable<string> selectedamirliks;
    int istipiid=0 ;



    List<Amirlik> AmirlikList = new List<Amirlik>();
    List<Talep> TalepList = new List<Talep>();
    List<IsTipleri> IsTipleriList = new List<IsTipleri>();

    IEnumerable<Amirlik> listyerleske;
    IEnumerable<Talep> listtalep;
    IEnumerable<IsTipleri> lististipleri;


    void ChangeBound(object value, string name)
    {


    }
    void NavigatetoNextComponent()
    {
        UriHelper.NavigateTo("daire");
    }



    protected async override void OnInitialized()
    {
        listyerleske = await amirliksService.GetAmirliks();


        // listtalep = await talepsService.GetTaleps();
        lististipleri = await istipleriService.GetIsTipleris();
        IsTipleriList.AddRange(lististipleri);
        AmirlikList.AddRange(listyerleske);
        //TalepList.AddRange(listtalep);

        _components.Add(1,new DaireBakimOnarim());
        _components.Add(2,new Isg());
    }


    void OnPaste(HtmlEditorPasteEventArgs args)
    {
        Console.WriteLine($"Paste: {args.Html}");
    }

    void OnChange(string html)
    {
        Console.WriteLine($"Change: {html}");
    }
    void OnChange()
    {
        var lististip = lististipleri.Where(s => s.AmirlikId.Equals(amirlikid));
        IsTipleriList.AddRange(lististip);
    }
    void OnChange(object value, string name)
    {
        //TalepList.AddRange(listtalep);

    }

    void OnExecute(HtmlEditorExecuteEventArgs args)
    {
        Console.WriteLine($"Execute: {args.CommandName}");



    }
}
