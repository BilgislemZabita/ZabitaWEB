@page "/talep"
@using Zabita.Entities.Concrete
@using ZabitaWEB.Client.Services.Abstract
@inject IAmirliksService amirlikService

<div class="row">
    <div class="col-md-12">
        <RadzenCard>
            <div class="card-header " style="max-height:2.3em;background-color:white;font-size:larger;text-align:justify"><h3> İş Seçimi</h3> </div>

            <div class="row">
                <div class="col-md-6 mt-3">
                    <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@products @bind-Value=@myModel.MyValue
                                    TextProperty="ProductName" ValueProperty="ProductID" Change=@(args => ChangeBound(args, "DropDown with bound Value")) Style="width: 100%" />
                </div>
                <div class="col-md-6 mt-3">

                    <RadzenDropDown AllowClear="true" AllowFiltering="true" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" Data=@products @bind-Value=@myModel.MyValue
                                    TextProperty="ProductName" ValueProperty="ProductID" Change=@(args => ChangeBound(args, "DropDown with bound Value")) Style="width:100%" />
                </div>
            </div>
        </RadzenCard>

    </div>
 
</div>
<div class="row">
    <div class="col-md-12 mt-3 ">
       
        <DaireBakimOnarim></DaireBakimOnarim>
    </div>
    
    

</div>
<div>
</div>


@code {

    void ChangeBound(object value, string name)
    {
        Console.WriteLine($"{name} value changed to {myModel.MyValue}");
    }
    MyObject myModel = new MyObject();
    class MyObject
    {
        public int? MyValue { get; set; } = 3;
    }
    IEnumerable<Amirlik> products;

    protected async override void OnInitialized()
    {

        products = await amirlikService.GetAmirliks();

    }


    void OnPaste(HtmlEditorPasteEventArgs args)
    {
        Console.WriteLine($"Paste: {args.Html}");
    }

    void OnChange(string html)
    {
        Console.WriteLine($"Change: {html}");
    }

    void OnExecute(HtmlEditorExecuteEventArgs args)
    {
        Console.WriteLine($"Execute: {args.CommandName}");
    }
}
